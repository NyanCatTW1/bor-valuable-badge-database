openapi: 3.0.3
info:
  title: BoR Valuable Badge Database
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: https://example.com/api/v3
tags:
  - name: query
    description: Database lookup
  - name: user
    description: Database management available to all users
  - name: admin
    description: Database management available to admins
paths:
  /query/bybadgeids:
    get:
      tags:
        - query
      summary: Look up creation dates and values of badge ids
      parameters:
        - in: query
          name: badgeIds
          schema:
            type: array
            items:
              type: integer
          required: true
          description: The CSV of badge ids
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/BadgeInfo'
    post:
      tags:
        - query
      summary: Look up creation dates and values of badge ids
      requestBody:
        description: The CSV of badge ids
        required: true
        content:
          text/plain:
            schema:
              type: string
              example: 2124469124
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/BadgeInfo'
  /query/byuniverseids:
    get:
      tags:
        - query
      summary: Look up creation dates and values of all badges under universes
      parameters:
        - in: query
          name: universeIds
          schema:
            type: array
            items:
              type: integer
          required: true
          description: The CSV of universe ids
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/UniverseInfo'
    post:
      tags:
        - query
      summary: Look up creation dates and values of all badges under universes
      requestBody:
        description: The CSV of universe ids
        required: true
        content:
          text/plain:
            schema:
              type: string
              example: 1159511221
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/UniverseInfo'
  /user/requestcheck:
    get:
      tags:
      - user
      summary: Request a check/recheck of an universe. Gets ignored if the universe was last checked <5 mins ago
      parameters:
        - in: query
          name: universeId
          schema:
            type: integer
          required: true
          description: The universe id to check
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  last_checked:
                    type: integer
                    example: 1683424605340
                  check_in_progress:
                    type: boolean
                    example: true
  /user/reportmissing:
    get:
      tags:
        - user
      summary: Run checks based on missing/unknown badge ids
      parameters:
        - in: query
          name: badgeIds
          schema:
            type: array
            items:
              type: integer
          required: true
          description: The CSV of badge ids
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  added_to_queue:
                    type: integer
                    example: 0
                  missing_badges:
                    type: integer
                    example: 0
    post:
      tags:
        - user
      summary: Run checks based on missing/unknown badge ids
      requestBody:
        description: The CSV of badge ids
        required: true
        content:
          text/plain:
            schema:
              type: string
              example: 2124469124
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  added_to_queue:
                    type: integer
                    example: 0
                  missing_badges:
                    type: integer
                    example: 0
  /admin/startcheck:
    get:
      tags:
      - admin
      security:
        - ApiKeyAuth: []
      summary: Start a check/recheck of an universe
      parameters:
        - in: query
          name: universeId
          schema:
            type: integer
          required: true
          description: The universe id to check
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  last_checked:
                    type: integer
                    example: 1683424605340
                  check_in_progress:
                    type: boolean
                    example: true
  /admin/dumpdb:
    get:
      tags:
      - admin
      security:
        - ApiKeyAuth: []
      summary: Get a dump of the entire database right now
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
  /admin/purgeuniverseinfos:
    get:
      tags:
      - admin
      security:
        - ApiKeyAuth: []
      summary: Purge cached info of universes and all associated badges
      parameters:
        - in: query
          name: universeIds
          schema:
            type: array
            items:
              type: integer
          required: true
          description: The CSV of universe ids
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  badges_affected:
                    type: integer
                    example: 0
    post:
      tags:
      - admin
      security:
        - ApiKeyAuth: []
      summary: Purge cached info of universes and all associated badges
      requestBody:
        description: The CSV of universe ids
        required: true
        content:
          text/plain:
            schema:
              type: string
              example: 1159511221
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  badges_affected:
                    type: integer
                    example: 0
  /admin/refreshdb:
    get:
      tags:
      - admin
      security:
        - ApiKeyAuth: []
      summary: Redetermine values of all badges in the database and compact it
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  badges_affected:
                    type: integer
                    example: 0
components:
  schemas:
    BadgeInfo:
      type: object
      properties:
        badge_id:
          type: integer
          example: 2124469124
        found:
          type: boolean
          example: true
        created:
          type: integer
          example: 1558655968690
        awarding_universe:
          type: integer
          example: 1159511221
        value:
          type: integer
          example: 2
    UniverseInfo:
      type: object
      properties:
        universe_id:
          type: integer
          example: 1159511221
        found:
          type: boolean
          example: true
        last_checked:
          type: integer
          example: 1683424605340
        name:
          type: string
          example: "[30,000 Badges] Manner's Badge Walk"
        badge_count:
          type: integer
          example: 30000
        free_badges:
          type: array
          items:
            type: integer
            example: 2124960830
        badges:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/BadgeInfo'
          example:
            2124469124:
              badge_id: 2124469124
              found: true
              created: 1558655968690
              awarding_universe: 1159511221
              value: 2
    Database:
      type: object
      properties:
        universes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/UniverseInfo'
          example:
            1159511221:
              universe_id: 1159511221
              found: true
              last_checked: 1683424605340
              name: "[30,000 Badges] Manner's Badge Walk"
              badge_count: 30000
              free_badges: [2124960830]
              badges:
                2124469124:
                  badge_id: 2124469124
                  found: true
                  created: 1558655968690
                  awarding_universe: 1159511221
                  value: 2
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: api_key
      in: header